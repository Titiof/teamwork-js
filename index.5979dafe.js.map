{"mappings":"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","sources":["src/index.js","src/js/dark-mode.js","src/js/allcategories.js","src/js/allcategories/category_template.js","src/js/main.js","src/js/loader.js","src/js/scroll-up.js"],"sourcesContent":["import './js/login/logout';\nimport './js/dark-mode';\nimport './js/allcategories';\nimport './js/support';\nimport './js/main';\nimport './js/scroll-up';\nimport './js/clock';\nimport './js/modal';\n","// check for saved 'darkMode' in localStorage\nlet darkMode = localStorage.getItem('darkMode');\n\nconst darkModeToggle = document.querySelector('#dark-mode-toggle');\nconst darkModeToggleTwo = document.querySelector('#dark-mode-toggle-two');\nconst darkModeCheckbox = document.querySelector('.checkbox'); // Get the checkbox element\n\nconst enableDarkMode = () => {\n  // 1. Add the class to the body\n  document.body.classList.add('darkmode');\n\n  // 2. Update darkMode in localStorage\n  localStorage.setItem('darkMode', 'enabled');\n  // 3. Check the checkbox\n  darkModeCheckbox.checked = true;\n};\n\nconst disableDarkMode = () => {\n  // 1. Remove the class from the body\n  document.body.classList.remove('darkmode');\n  // 2. Update darkMode in localStorage\n  localStorage.setItem('darkMode', null);\n  // 3. Uncheck the checkbox\n  darkModeCheckbox.checked = false;\n};\n\n// If the user already visited and enabled darkMode\n// start things off with it on\nif (darkMode === 'enabled') {\n  enableDarkMode();\n}\n\n// When someone clicks the first toggle\ndarkModeToggle.addEventListener('click', () => {\n  // Get the current state of dark mode\n  darkMode = localStorage.getItem('darkMode');\n\n  // Toggle the state based on the current value\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    darkModeToggleTwo.checked = true;\n  } else {\n    disableDarkMode();\n    darkModeToggleTwo.checked = false;\n  }\n});\n\n// When someone clicks the second toggle\ndarkModeToggleTwo.addEventListener('click', () => {\n  // Get the current state of dark mode for the second toggle\n  darkMode = localStorage.getItem('darkMode');\n\n  // Toggle the state based on the current value\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    darkModeToggle.checked = true;\n  } else {\n    disableDarkMode();\n    darkModeToggle.checked = false;\n  }\n});\n","import { BooksAPI } from \"./books-api\";\nimport { menuTemplate } from \"./allcategories/category_template\";\nimport { markupCategoryBook } from \"./allcategories/category_template\";\nimport { createListMarkup } from \"./bookMarkupLi\";\n\nconst listEl = document.querySelector('.vertical-menu');\nconst categoryTitle = document.querySelector('.main-header');\nconst bestsellersList = document.querySelector('.bestsellers-list');\nconst itemList = listEl.querySelector('li');\n\n\nconst booksAPI = new BooksAPI();\n\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n    itemList.classList.add('active');\n\n    try{\n        const listData =  await booksAPI.getCategoriesList();\n\n        const sortByAlphabet = listData\n        .map(el => {\n            const nameEl = el.list_name;\n            return nameEl;\n        })\n        .sort((a, b) => a.localeCompare(b));\n\n        const markup = menuTemplate(sortByAlphabet);\n        listEl.insertAdjacentHTML(\"beforeend\", markup);\n        \n    }catch(error) {\n        Notiflix.Notify.failure('Oops, something went wrong!');\n    }\n});\n\nlistEl.addEventListener('click', onChangeCategoryPage);\n\n\nbestsellersList.addEventListener('click', (e) => {\n    if(e.target.nodeName === 'BUTTON'){\n        categoryTitle.style.display = \"none\";\n        renderBooksFromCategory(e.target.name)\n        const liList = listEl.querySelectorAll('li');\n        liList.forEach(li =>{\n           if(li.textContent === e.target.name){\n            itemList.classList.remove('active');\n            li.classList.add('active');\n           };\n        })\n    }\n});\n\n\nasync function onChangeCategoryPage(e){\n    e.preventDefault();\n\n    if(e.target.nodeName === 'LI'){\n            listEl.querySelectorAll('li').forEach(item => {\n                item.classList.remove('active');\n            });\n            e.target.classList.add('active');\n\n        if(e.target.classList.contains('all_categories')){\n            try {\n                const response = await booksAPI.getBooks();\n                createListMarkup(response);\n    \n                categoryTitle.style.display = \"block\";\n\n                \n              } catch (error) {\n                Notiflix.Notify.failure('Oops, something went wrong!');\n              }\n\n        } else {\n            categoryTitle.style.display = \"none\";\n            const title = e.target.textContent;\n            renderBooksFromCategory(title);\n        }    \n    } else {\n        return;\n    }\n}\n\nasync function renderBooksFromCategory(category_name){\n    try{\n        const booksCategoryData = await booksAPI.getFullCategory(category_name);\n        markupCategoryBook(booksCategoryData, category_name);\n    }catch(error){\n        Notiflix.Notify.failure('Sorry, there is no books in this category');\n    }\n}\n\n","import createBookMarkup from \"../bookMarkupLi\";\n\n\nexport function menuTemplate(list){\n     return list.map(el => {\n        return `<li class='list_name'>${el}</li>`;\n     }).join('');\n }\n\nexport function markupCategoryBook(array, category_name){\n    const bookLiEl = array.map(book => {\n        const markup = createBookMarkup(book);\n        return markup;\n    }).join('');\n\n    const categoryArray = category_name.split(\" \");\n\n    let lastElInd = categoryArray.length - 1;\n    let lastEl = categoryArray[lastElInd];\n    let firstPart = categoryArray.splice(0, lastElInd).join(\" \");\n   \n\n    const bookCategoryElements = `\n    <h2 class=\"main-header\">${firstPart} \n        <span class=\"main-header-accent\">${lastEl}</span>\n    </h2>\n    <ul class=\"category-books-wrapper\">${bookLiEl}</ul>`;\n\n    document.querySelector('.bestsellers-list').innerHTML = bookCategoryElements;\n\n    const bookCard = document.querySelectorAll('.book-card');\n    bookCard.forEach(item => {\n        item.classList.add('show-all');\n    })\n}","import Notiflix from 'notiflix';\nimport { BooksAPI } from './books-api';\nimport { createListMarkup } from './bookMarkupLi';\nimport { toggleLoader } from './loader';\n\nconst booksApi = new BooksAPI();\nasync function onPageLoad() {\n  toggleLoader();\n  try {\n    const response = await booksApi.getBooks();\n    if (response.length === 0) {\n      Notiflix.Notify.warning('Sorry, there are no top books yet');\n    }\n    createListMarkup(response);\n  } catch (error) {\n    Notiflix.Notify.failure('Oops, something went wrong!');\n  } finally {\n    toggleLoader();\n  }\n}\nonPageLoad();\n","const loaderEl = document.querySelector('.loader-backdrop');\n\nexport function toggleLoader() {\n  loaderEl.classList.toggle('is-hidden');\n}\n","const btnToTop = document.querySelector('#button-scroll-up');\n\nfunction scrollTop() {\n  window.addEventListener('scroll', onScrollShowBtn);\n\n  function onScrollShowBtn() {\n    window.scrollY > 200\n      ? btnToTop.classList.add('show')\n      : btnToTop.classList.remove('show');\n  }\n\n  btnToTop.addEventListener('click', onClickGoTop);\n\n  function onClickGoTop() {\n    if (window.scrollY != 0) {\n      setTimeout(function () {\n        window.scrollTo(0, window.scrollY - 70);\n        onClickGoTop();\n      }, 10);\n    }\n  }\n}\nscrollTop();\n"],"names":["parcelRequire","$dbed101c91af2533$var$darkMode","localStorage","getItem","$dbed101c91af2533$var$darkModeToggle","document","querySelector","$dbed101c91af2533$var$darkModeToggleTwo","$dbed101c91af2533$var$darkModeCheckbox","$dbed101c91af2533$var$enableDarkMode","body","classList","add","setItem","checked","$dbed101c91af2533$var$disableDarkMode","remove","addEventListener","$bpxeT","$bcj8o","$b2724bea9a9eb061$export$c4904c9f36c6087e","array","category_name","bookLiEl","map","book","default","join","categoryArray","split","lastElInd","length","lastEl","firstPart","splice","bookCategoryElements","concat","innerHTML","querySelectorAll","forEach","item","$9de954820cc8c898$var$listEl","$9de954820cc8c898$var$categoryTitle","$9de954820cc8c898$var$bestsellersList","$9de954820cc8c898$var$itemList","$9de954820cc8c898$var$booksAPI","$fepPP","BooksAPI","$9de954820cc8c898$var$_onChangeCategoryPage","$parcel$interopDefault","$2TvXO","mark","_callee","e","response","preventDefault","target","nodeName","contains","getBooks","_ctx","sent","createListMarkup","style","display","Notiflix","Notify","failure","$9de954820cc8c898$var$renderBooksFromCategory","textContent","apply","this","arguments","$9de954820cc8c898$var$_renderBooksFromCategory","getFullCategory","window","listData","sortByAlphabet","markup","getCategoriesList","el","list_name","sort","a","b","localeCompare","insertAdjacentHTML","name","li","$03da642c15b09e5e$var$loaderEl","$03da642c15b09e5e$export$b7ad259263a18c06","toggle","$089c40fcbb903d20$var$booksApi","$089c40fcbb903d20$var$_onPageLoad","$6JpON","warning","$089c40fcbb903d20$var$onPageLoad","$17f8071d162f96bc$var$btnToTop","scrollY","onClickGoTop","setTimeout","scrollTo"],"version":3,"file":"index.5979dafe.js.map"}