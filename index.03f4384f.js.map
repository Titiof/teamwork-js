{"mappings":"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","sources":["src/index.js","src/js/dark-mode.js","src/js/allcategories.js","src/js/allcategories/category_template.js","src/js/main.js","src/js/loader.js","src/js/scroll-up.js"],"sourcesContent":["import './js/firebase';\nimport './js/login/logout';\nimport './js/mobile-menu';\nimport './js/header';\nimport './js/dark-mode';\nimport './js/allcategories';\nimport './js/support';\nimport './js/main';\nimport './js/scroll-up';\nimport './js/clock';\nimport './js/modal';\n","import { setDarkMode } from \"./firebase\";\n// check for saved 'darkMode' in localStorage\nlet darkMode = localStorage.getItem('darkMode');\n\nconst darkModeToggle = document.querySelector('#dark-mode-toggle');\nconst darkModeToggleTwo = document.querySelector('#dark-mode-toggle-two');\nconst darkModeCheckbox = document.querySelector('.checkbox'); // Get the checkbox element\n\nconst enableDarkMode = () => {\n  // 1. Add the class to the body\n  setDarkMode('enable')\n\n  document.body.classList.add('darkmode');\n\n  // 2. Update darkMode in localStorage\n  localStorage.setItem('darkMode', 'enabled');\n  // 3. Check the checkbox\n  darkModeCheckbox.checked = true;\n};\n\nconst disableDarkMode = () => {\n  setDarkMode('null')\n  // 1. Remove the class from the body\n  document.body.classList.remove('darkmode');\n  // 2. Update darkMode in localStorage\n  localStorage.setItem('darkMode', null);\n  // 3. Uncheck the checkbox\n  darkModeCheckbox.checked = false;\n};\n\n// If the user already visited and enabled darkMode\n// start things off with it on\nif (darkMode === 'enabled') {\n  enableDarkMode();\n}\n\n// When someone clicks the first toggle\ndarkModeToggle.addEventListener('click', () => {\n  // Get the current state of dark mode\n  darkMode = localStorage.getItem('darkMode');\n\n  // Toggle the state based on the current value\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    darkModeToggleTwo.checked = true;\n  } else {\n    disableDarkMode();\n    darkModeToggleTwo.checked = false;\n  }\n});\n\n// When someone clicks the second toggle\ndarkModeToggleTwo.addEventListener('click', () => {\n  // Get the current state of dark mode for the second toggle\n  darkMode = localStorage.getItem('darkMode');\n\n  // Toggle the state based on the current value\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    darkModeToggle.checked = true;\n  } else {\n    disableDarkMode();\n    darkModeToggle.checked = false;\n  }\n});\n","import { BooksAPI } from \"./books-api\";\nimport { menuTemplate } from \"./allcategories/category_template\";\nimport { markupCategoryBook } from \"./allcategories/category_template\";\nimport { createListMarkup } from \"./bookMarkupLi\";\n\nconst listEl = document.querySelector('.vertical-menu');\nconst categoryTitle = document.querySelector('.main-header');\nconst bestsellersList = document.querySelector('.bestsellers-list');\nconst itemList = listEl.querySelector('li');\n\n\nconst booksAPI = new BooksAPI();\n\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n    itemList.classList.add('active');\n\n    try{\n        const listData =  await booksAPI.getCategoriesList();\n\n        const sortByAlphabet = listData\n        .map(el => {\n            const nameEl = el.list_name;\n            return nameEl;\n        })\n        .sort((a, b) => a.localeCompare(b));\n\n        const markup = menuTemplate(sortByAlphabet);\n        listEl.insertAdjacentHTML(\"beforeend\", markup);\n        \n    }catch(error) {\n        Notiflix.Notify.failure('Oops, something went wrong!');\n    }\n});\n\nlistEl.addEventListener('click', onChangeCategoryPage);\n\n\nbestsellersList.addEventListener('click', (e) => {\n    if(e.target.nodeName === 'BUTTON'){\n        categoryTitle.style.display = \"none\";\n        renderBooksFromCategory(e.target.name)\n        const liList = listEl.querySelectorAll('li');\n        liList.forEach(li =>{\n           if(li.textContent === e.target.name){\n            itemList.classList.remove('active');\n            li.classList.add('active');\n           };\n        })\n    }\n});\n\n\nasync function onChangeCategoryPage(e){\n    e.preventDefault();\n\n    if(e.target.nodeName === 'LI'){\n            listEl.querySelectorAll('li').forEach(item => {\n                item.classList.remove('active');\n            });\n            e.target.classList.add('active');\n\n        if(e.target.classList.contains('all_categories')){\n            try {\n                const response = await booksAPI.getBooks();\n                createListMarkup(response);\n    \n                categoryTitle.style.display = \"block\";\n\n                \n              } catch (error) {\n                Notiflix.Notify.failure('Oops, something went wrong!');\n              }\n\n        } else {\n            categoryTitle.style.display = \"none\";\n            const title = e.target.textContent;\n            renderBooksFromCategory(title);\n        }    \n    } else {\n        return;\n    }\n}\n\nasync function renderBooksFromCategory(category_name){\n    try{\n        const booksCategoryData = await booksAPI.getFullCategory(category_name);\n        markupCategoryBook(booksCategoryData, category_name);\n    }catch(error){\n        Notiflix.Notify.failure('Sorry, there is no books in this category');\n    }\n}\n\n","import createBookMarkup from \"../bookMarkupLi\";\n\n\nexport function menuTemplate(list){\n     return list.map(el => {\n        return `<li class='list_name'>${el}</li>`;\n     }).join('');\n }\n\nexport function markupCategoryBook(array, category_name){\n    const bookLiEl = array.map(book => {\n        const markup = createBookMarkup(book);\n        return markup;\n    }).join('');\n\n    const categoryArray = category_name.split(\" \");\n\n    let lastElInd = categoryArray.length - 1;\n    let lastEl = categoryArray[lastElInd];\n    let firstPart = categoryArray.splice(0, lastElInd).join(\" \");\n   \n\n    const bookCategoryElements = `\n    <h2 class=\"main-header\">${firstPart} \n        <span class=\"main-header-accent\">${lastEl}</span>\n    </h2>\n    <ul class=\"category-books-wrapper\">${bookLiEl}</ul>`;\n\n    document.querySelector('.bestsellers-list').innerHTML = bookCategoryElements;\n\n    const bookCard = document.querySelectorAll('.book-card');\n    bookCard.forEach(item => {\n        item.classList.add('show-all');\n    })\n}","import Notiflix from 'notiflix';\nimport { BooksAPI } from './books-api';\nimport { createListMarkup } from './bookMarkupLi';\nimport { toggleLoader } from './loader';\n\nconst booksApi = new BooksAPI();\nasync function onPageLoad() {\n  toggleLoader();\n  try {\n    const response = await booksApi.getBooks();\n    if (response.length === 0) {\n      Notiflix.Notify.warning('Sorry, there are no top books yet');\n    }\n    createListMarkup(response);\n  } catch (error) {\n    Notiflix.Notify.failure('Oops, something went wrong!');\n  } finally {\n    toggleLoader();\n  }\n}\nonPageLoad();\n","const loaderEl = document.querySelector('.loader-backdrop');\n\nexport function toggleLoader() {\n  loaderEl.classList.toggle('is-hidden');\n}\n","const btnToTop = document.querySelector('#button-scroll-up');\n\nfunction scrollTop() {\n  window.addEventListener('scroll', onScrollShowBtn);\n\n  function onScrollShowBtn() {\n    window.scrollY > 200\n      ? btnToTop.classList.add('show')\n      : btnToTop.classList.remove('show');\n  }\n\n  btnToTop.addEventListener('click', onClickGoTop);\n\n  function onClickGoTop() {\n    if (window.scrollY != 0) {\n      setTimeout(function () {\n        window.scrollTo(0, window.scrollY - 70);\n        onClickGoTop();\n      }, 10);\n    }\n  }\n}\nscrollTop();\n"],"names":["parcelRequire","$2ix2C","$783bd14e262f0cf7$var$darkMode","localStorage","getItem","$783bd14e262f0cf7$var$darkModeToggle","document","querySelector","$783bd14e262f0cf7$var$darkModeToggleTwo","$783bd14e262f0cf7$var$darkModeCheckbox","$783bd14e262f0cf7$var$enableDarkMode","setDarkMode","body","classList","add","setItem","checked","$783bd14e262f0cf7$var$disableDarkMode","remove","addEventListener","$hLzQv","$8La2v","$743469cb20737f38$export$c4904c9f36c6087e","array","category_name","bookLiEl","map","book","default","join","categoryArray","split","lastElInd","length","lastEl","bookCategoryElements","splice","innerHTML","querySelectorAll","forEach","item","$3eb46db6727c6e80$var$listEl","$3eb46db6727c6e80$var$categoryTitle","$3eb46db6727c6e80$var$bestsellersList","$3eb46db6727c6e80$var$itemList","$3eb46db6727c6e80$var$booksAPI","BooksAPI","async","$3eb46db6727c6e80$var$renderBooksFromCategory","getFullCategory","error","Notiflix","Notify","failure","window","sortByAlphabet","getCategoriesList","el","list_name","sort","a","b","localeCompare","markup","insertAdjacentHTML","e","preventDefault","target","nodeName","contains","response","getBooks","createListMarkup","style","display","textContent","name","li","$7Y9D8","$bdfcdc80b4c38739$var$loaderEl","$bdfcdc80b4c38739$export$b7ad259263a18c06","toggle","$d706c914d748cb55$var$booksApi","$parcel$interopDefault","warning","$d706c914d748cb55$var$onPageLoad","$52650fc44c8b8200$var$btnToTop","scrollY","onClickGoTop","setTimeout","scrollTo"],"version":3,"file":"index.03f4384f.js.map"}