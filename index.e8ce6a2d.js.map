{"mappings":"qhBAAAA,EAAA,S,iCCCA,IAAIC,EAAWC,aAAaC,QAAQ,YAEpC,MAAMC,EAAiBC,SAASC,cAAc,qBACxCC,EAAoBF,SAASC,cAAc,yBAC3CE,EAAmBH,SAASC,cAAc,aAE1CG,EAAiB,KAGrBJ,SAASK,KAAKC,UAAUC,IAAI,YAG5BV,aAAaW,QAAQ,WAAY,WAEjCL,EAAiBM,SAAU,CAAI,EAG3BC,EAAkB,KAEtBV,SAASK,KAAKC,UAAUK,OAAO,YAE/Bd,aAAaW,QAAQ,WAAY,MAEjCL,EAAiBM,SAAU,CAAK,EAKjB,YAAbb,GACFQ,IAIFL,EAAea,iBAAiB,SAAS,KAEvChB,EAAWC,aAAaC,QAAQ,YAGf,YAAbF,GACFQ,IACAF,EAAkBO,SAAU,IAE5BC,IACAR,EAAkBO,SAAU,E,IAKhCP,EAAkBU,iBAAiB,SAAS,KAE1ChB,EAAWC,aAAaC,QAAQ,YAGf,YAAbF,GACFQ,IACAL,EAAeU,SAAU,IAEzBC,IACAX,EAAeU,SAAU,E,IC3D7B,IAAAI,EAAAlB,EAAA,SCAA,MAAMmB,EAAYd,SAASC,cAAc,qBAE1B,SAAAc,EAA0BC,GACvC,MAAO,6BAA6BA,EAAKC,mGAEGD,EAAKE,yKAGTF,EAAKG,qDACPH,EAAKI,2B,CAItC,SAASC,EAAiBC,GAC/B,MAAMC,EAAQ,GACd,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,GAAK,EAAG,CACxC,MAAME,EAAWJ,EAAME,GAAGF,MACvBK,KAAI,CAACX,EAAMY,KACV,GAAIA,EAAM,EACR,OAAOb,EAAiBC,EAAK,IAGhCa,KAAK,IACFC,EAAS,kCAAkCR,EAAME,GAAGO,2DAExDL,yDAEoCJ,EAAME,GAAGO,6CAC/CR,EAAMS,KAAKF,E,CAEbhB,EAAUmB,UAAYV,EAAMM,KAAK,G,CCrB5B,SAASK,EAAmBC,EAAOC,GACtC,MAAMC,EAAWF,EAAMR,KAAIX,GACRD,EAAiBC,KAEjCa,KAAK,IAEFS,EAAgBF,EAAcG,MAAM,KAE1C,IAAIC,EAAYF,EAAcb,OAAS,EACnCgB,EAASH,EAAcE,GAI3B,MAAME,EAAuB,iCAHbJ,EAAcK,OAAO,EAAGH,GAAWX,KAAK,mDAKjBY,+DAEFJ,SAErCrC,SAASC,cAAc,qBAAqBgC,UAAYS,EAEvC1C,SAAS4C,iBAAiB,cAClCC,SAAQC,IACbA,EAAKxC,UAAUC,IAAI,WAAW,G,CF3BtC,MAAMwC,EAAS/C,SAASC,cAAc,kBAChC+C,EAAgBhD,SAASC,cAAc,gBACvCgD,EAAkBjD,SAASC,cAAc,qBACzCiD,EAAWH,EAAO9C,cAAc,MAGhCkD,EAAW,IAAI,EAAAtC,EAAAuC,UAyErBC,eAAeC,EAAwBlB,GACnC,IAEIF,QADgCiB,EAASI,gBAAgBnB,GACnBA,E,CACzC,MAAMoB,GACHC,SAASC,OAAOC,QAAQ,4C,EA3EhCC,OAAOhD,iBAAiB,oBAAoByC,UACxCH,EAAS5C,UAAUC,IAAI,UAEvB,IACI,MAEMsD,SAFkBV,EAASW,qBAGhCnC,KAAIoC,GACcA,EAAGhC,YAGrBiC,MAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAcD,KAE1BpC,EAAsB+B,EEvBnBlC,KAAIoC,GACN,yBAAyBA,WAChClC,KAAK,IFsBLkB,EAAOqB,mBAAmB,YAAatC,E,CAE1C,MAAM0B,GACHC,SAASC,OAAOC,QAAQ,8B,KAIhCZ,EAAOnC,iBAAiB,SAkBxByC,eAAoCgB,GAGhC,GAFAA,EAAEC,iBAEuB,OAAtBD,EAAEE,OAAOC,SAwBR,OAlBA,GALIzB,EAAOH,iBAAiB,MAAMC,SAAQC,IAClCA,EAAKxC,UAAUK,OAAO,SAAS,IAEnC0D,EAAEE,OAAOjE,UAAUC,IAAI,UAExB8D,EAAEE,OAAOjE,UAAUmE,SAAS,kBAC3B,IAEIpD,QADuB8B,EAASuB,YAGhC1B,EAAc2B,MAAMC,QAAU,O,CAG9B,MAAOpB,GACPC,SAASC,OAAOC,QAAQ,8B,KAGzB,CACHX,EAAc2B,MAAMC,QAAU,OAE9BtB,EADce,EAAEE,OAAOM,Y,KAtCnC5B,EAAgBrC,iBAAiB,SAAUyD,IACvC,GAAyB,WAAtBA,EAAEE,OAAOC,SAAsB,CAC9BxB,EAAc2B,MAAMC,QAAU,OAC9BtB,EAAwBe,EAAEE,OAAOO,MAClB/B,EAAOH,iBAAiB,MAChCC,SAAQkC,IACTA,EAAGF,cAAgBR,EAAEE,OAAOO,OAC9B5B,EAAS5C,UAAUK,OAAO,UAC1BoE,EAAGzE,UAAUC,IAAI,U,mBG9C7B,IAAAyE,EAAArF,EAAA,S,aCAA,MAAMsF,EAAWjF,SAASC,cAAc,oBAEjC,SAASiF,IACdD,EAAS3E,UAAU6E,OAAO,Y,CDE5B,MAAMC,EAAW,IAAI,EAAAvE,EAAAuC,WACrBC,iBACE6B,IACA,IACE,MAAMG,QAAiBD,EAASV,WACR,IAApBW,EAAS5D,QACX6D,EAAAN,GAAStB,OAAO6B,QAAQ,qCAE1BlE,EAAiBgE,E,CACjB,MAAO7B,GACP8B,EAAAN,GAAStB,OAAOC,QAAQ,8B,CACzB,QACCuB,G,EAGJM,GEpBA,MAAMC,EAAWzF,SAASC,cAAc,qBAGtC2D,OAAOhD,iBAAiB,UAExB,WACEgD,OAAO8B,QAAU,IACbD,EAASnF,UAAUC,IAAI,QACvBkF,EAASnF,UAAUK,OAAO,O,IAGhC8E,EAAS7E,iBAAiB,SAE1B,SAAS+E,IACe,GAAlB/B,OAAO8B,SACTE,YAAW,WACThC,OAAOiC,SAAS,EAAGjC,OAAO8B,QAAU,IACpCC,G,GACC,G","sources":["src/index.js","src/js/dark-mode.js","src/js/allcategories.js","src/js/bookMarkupLi.js","src/js/allcategories/category_template.js","src/js/main.js","src/js/loader.js","src/js/scroll-up.js"],"sourcesContent":["import './js/firebase';\nimport './js/login/logout';\nimport './js/mobile-menu';\nimport './js/header';\nimport './js/dark-mode';\nimport './js/allcategories';\nimport './js/support';\nimport './js/main';\nimport './js/scroll-up';\nimport './js/clock';\nimport './js/modal';\n","// check for saved 'darkMode' in localStorage\nlet darkMode = localStorage.getItem('darkMode');\n\nconst darkModeToggle = document.querySelector('#dark-mode-toggle');\nconst darkModeToggleTwo = document.querySelector('#dark-mode-toggle-two');\nconst darkModeCheckbox = document.querySelector('.checkbox'); // Get the checkbox element\n\nconst enableDarkMode = () => {\n  // 1. Add the class to the body\n\n  document.body.classList.add('darkmode');\n\n  // 2. Update darkMode in localStorage\n  localStorage.setItem('darkMode', 'enabled');\n  // 3. Check the checkbox\n  darkModeCheckbox.checked = true;\n};\n\nconst disableDarkMode = () => {\n  // 1. Remove the class from the body\n  document.body.classList.remove('darkmode');\n  // 2. Update darkMode in localStorage\n  localStorage.setItem('darkMode', null);\n  // 3. Uncheck the checkbox\n  darkModeCheckbox.checked = false;\n};\n\n// If the user already visited and enabled darkMode\n// start things off with it on\nif (darkMode === 'enabled') {\n  enableDarkMode();\n}\n\n// When someone clicks the first toggle\ndarkModeToggle.addEventListener('click', () => {\n  // Get the current state of dark mode\n  darkMode = localStorage.getItem('darkMode');\n\n  // Toggle the state based on the current value\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    darkModeToggleTwo.checked = true;\n  } else {\n    disableDarkMode();\n    darkModeToggleTwo.checked = false;\n  }\n});\n\n// When someone clicks the second toggle\ndarkModeToggleTwo.addEventListener('click', () => {\n  // Get the current state of dark mode for the second toggle\n  darkMode = localStorage.getItem('darkMode');\n\n  // Toggle the state based on the current value\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    darkModeToggle.checked = true;\n  } else {\n    disableDarkMode();\n    darkModeToggle.checked = false;\n  }\n});\n","import { BooksAPI } from \"./books-api\";\nimport { menuTemplate } from \"./allcategories/category_template\";\nimport { markupCategoryBook } from \"./allcategories/category_template\";\nimport { createListMarkup } from \"./bookMarkupLi\";\n\nconst listEl = document.querySelector('.vertical-menu');\nconst categoryTitle = document.querySelector('.main-header');\nconst bestsellersList = document.querySelector('.bestsellers-list');\nconst itemList = listEl.querySelector('li');\n\n\nconst booksAPI = new BooksAPI();\n\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n    itemList.classList.add('active');\n\n    try{\n        const listData =  await booksAPI.getCategoriesList();\n\n        const sortByAlphabet = listData\n        .map(el => {\n            const nameEl = el.list_name;\n            return nameEl;\n        })\n        .sort((a, b) => a.localeCompare(b));\n\n        const markup = menuTemplate(sortByAlphabet);\n        listEl.insertAdjacentHTML(\"beforeend\", markup);\n        \n    }catch(error) {\n        Notiflix.Notify.failure('Oops, something went wrong!');\n    }\n});\n\nlistEl.addEventListener('click', onChangeCategoryPage);\n\n\nbestsellersList.addEventListener('click', (e) => {\n    if(e.target.nodeName === 'BUTTON'){\n        categoryTitle.style.display = \"none\";\n        renderBooksFromCategory(e.target.name)\n        const liList = listEl.querySelectorAll('li');\n        liList.forEach(li =>{\n           if(li.textContent === e.target.name){\n            itemList.classList.remove('active');\n            li.classList.add('active');\n           };\n        })\n    }\n});\n\n\nasync function onChangeCategoryPage(e){\n    e.preventDefault();\n\n    if(e.target.nodeName === 'LI'){\n            listEl.querySelectorAll('li').forEach(item => {\n                item.classList.remove('active');\n            });\n            e.target.classList.add('active');\n\n        if(e.target.classList.contains('all_categories')){\n            try {\n                const response = await booksAPI.getBooks();\n                createListMarkup(response);\n    \n                categoryTitle.style.display = \"block\";\n\n                \n              } catch (error) {\n                Notiflix.Notify.failure('Oops, something went wrong!');\n              }\n\n        } else {\n            categoryTitle.style.display = \"none\";\n            const title = e.target.textContent;\n            renderBooksFromCategory(title);\n        }    \n    } else {\n        return;\n    }\n}\n\nasync function renderBooksFromCategory(category_name){\n    try{\n        const booksCategoryData = await booksAPI.getFullCategory(category_name);\n        markupCategoryBook(booksCategoryData, category_name);\n    }catch(error){\n        Notiflix.Notify.failure('Sorry, there is no books in this category');\n    }\n}\n\n","const booksList = document.querySelector('.bestsellers-list');\n\nexport default function createBookMarkup(book) {\n  return `<li class=\"book-card\" id=\"${book._id}\">\n            <div class=\"book-card-wrapper\">\n            <img class=\"book-card-img\" src=\"${book.book_image}\" alt=\"Book cover\" loading=\"lazy\" />\n            <p class=\"book-text-backdrop\">Quick view</p>\n            </div>\n            <h3 class=\"book-card-title\">${book.title}</h3>\n            <p class=\"book-card-text\">${book.author}</p>\n        </li>`;\n}\n\nexport function createListMarkup(books) {\n  const lists = [];\n  for (let i = 0; i < books.length; i += 1) {\n    const liMarkup = books[i].books\n      .map((book, idx) => {\n        if (idx < 5) {\n          return createBookMarkup(book);\n        }\n      })\n      .join('');\n    const markup = `<h2 class=\"top-category-title\">${books[i].list_name}</h2>\n    <ul class=\"top-category-list\">\n    ${liMarkup}\n    </ul>\n    <button class=\"book-card-btn\" name='${books[i].list_name}' type=\"button\">See more</button>`;\n    lists.push(markup);\n  }\n  booksList.innerHTML = lists.join('');\n}\n","import createBookMarkup from \"../bookMarkupLi\";\n\n\nexport function menuTemplate(list){\n     return list.map(el => {\n        return `<li class='list_name'>${el}</li>`;\n     }).join('');\n }\n\nexport function markupCategoryBook(array, category_name){\n    const bookLiEl = array.map(book => {\n        const markup = createBookMarkup(book);\n        return markup;\n    }).join('');\n\n    const categoryArray = category_name.split(\" \");\n\n    let lastElInd = categoryArray.length - 1;\n    let lastEl = categoryArray[lastElInd];\n    let firstPart = categoryArray.splice(0, lastElInd).join(\" \");\n   \n\n    const bookCategoryElements = `\n    <h2 class=\"main-header\">${firstPart} \n        <span class=\"main-header-accent\">${lastEl}</span>\n    </h2>\n    <ul class=\"category-books-wrapper\">${bookLiEl}</ul>`;\n\n    document.querySelector('.bestsellers-list').innerHTML = bookCategoryElements;\n\n    const bookCard = document.querySelectorAll('.book-card');\n    bookCard.forEach(item => {\n        item.classList.add('show-all');\n    })\n}","import Notiflix from 'notiflix';\nimport { BooksAPI } from './books-api';\nimport { createListMarkup } from './bookMarkupLi';\nimport { toggleLoader } from './loader';\n\nconst booksApi = new BooksAPI();\nasync function onPageLoad() {\n  toggleLoader();\n  try {\n    const response = await booksApi.getBooks();\n    if (response.length === 0) {\n      Notiflix.Notify.warning('Sorry, there are no top books yet');\n    }\n    createListMarkup(response);\n  } catch (error) {\n    Notiflix.Notify.failure('Oops, something went wrong!');\n  } finally {\n    toggleLoader();\n  }\n}\nonPageLoad();\n","const loaderEl = document.querySelector('.loader-backdrop');\n\nexport function toggleLoader() {\n  loaderEl.classList.toggle('is-hidden');\n}\n","const btnToTop = document.querySelector('#button-scroll-up');\n\nfunction scrollTop() {\n  window.addEventListener('scroll', onScrollShowBtn);\n\n  function onScrollShowBtn() {\n    window.scrollY > 200\n      ? btnToTop.classList.add('show')\n      : btnToTop.classList.remove('show');\n  }\n\n  btnToTop.addEventListener('click', onClickGoTop);\n\n  function onClickGoTop() {\n    if (window.scrollY != 0) {\n      setTimeout(function () {\n        window.scrollTo(0, window.scrollY - 70);\n        onClickGoTop();\n      }, 10);\n    }\n  }\n}\nscrollTop();\n"],"names":["parcelRequire","$783bd14e262f0cf7$var$darkMode","localStorage","getItem","$783bd14e262f0cf7$var$darkModeToggle","document","querySelector","$783bd14e262f0cf7$var$darkModeToggleTwo","$783bd14e262f0cf7$var$darkModeCheckbox","$783bd14e262f0cf7$var$enableDarkMode","body","classList","add","setItem","checked","$783bd14e262f0cf7$var$disableDarkMode","remove","addEventListener","$hLzQv","$660a80286db4bbef$var$booksList","$660a80286db4bbef$export$2e2bcd8739ae039","book","_id","book_image","title","author","$660a80286db4bbef$export$a8499f42c92fab5b","books","lists","i","length","liMarkup","map","idx","join","markup","list_name","push","innerHTML","$743469cb20737f38$export$c4904c9f36c6087e","array","category_name","bookLiEl","categoryArray","split","lastElInd","lastEl","bookCategoryElements","splice","querySelectorAll","forEach","item","$3eb46db6727c6e80$var$listEl","$3eb46db6727c6e80$var$categoryTitle","$3eb46db6727c6e80$var$bestsellersList","$3eb46db6727c6e80$var$itemList","$3eb46db6727c6e80$var$booksAPI","BooksAPI","async","$3eb46db6727c6e80$var$renderBooksFromCategory","getFullCategory","error","Notiflix","Notify","failure","window","sortByAlphabet","getCategoriesList","el","sort","a","b","localeCompare","insertAdjacentHTML","e","preventDefault","target","nodeName","contains","getBooks","style","display","textContent","name","li","$7Y9D8","$bdfcdc80b4c38739$var$loaderEl","$bdfcdc80b4c38739$export$b7ad259263a18c06","toggle","$d706c914d748cb55$var$booksApi","response","$parcel$interopDefault","warning","$d706c914d748cb55$var$onPageLoad","$52650fc44c8b8200$var$btnToTop","scrollY","onClickGoTop","setTimeout","scrollTo"],"version":3,"file":"index.e8ce6a2d.js.map"}