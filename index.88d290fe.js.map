{"mappings":"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","sources":["src/index.js","src/js/dark-mode.js","src/js/allcategories.js","src/js/bookMarkupLi.js","src/js/allcategories/category_template.js","src/js/main.js","src/js/loader.js","src/js/scroll-up.js"],"sourcesContent":["import './js/firebase';\nimport './js/login/logout';\nimport './js/mobile-menu';\nimport './js/header';\nimport './js/dark-mode';\nimport './js/allcategories';\nimport './js/support';\nimport './js/main';\nimport './js/scroll-up';\nimport './js/clock';\nimport './js/modal';\n","// check for saved 'darkMode' in localStorage\nlet darkMode = localStorage.getItem('darkMode');\n\nconst darkModeToggle = document.querySelector('#dark-mode-toggle');\nconst darkModeToggleTwo = document.querySelector('#dark-mode-toggle-two');\nconst darkModeCheckbox = document.querySelector('.checkbox'); // Get the checkbox element\n\nconst enableDarkMode = () => {\n  // 1. Add the class to the body\n\n  document.body.classList.add('darkmode');\n\n  // 2. Update darkMode in localStorage\n  localStorage.setItem('darkMode', 'enabled');\n  // 3. Check the checkbox\n  darkModeCheckbox.checked = true;\n};\n\nconst disableDarkMode = () => {\n  // 1. Remove the class from the body\n  document.body.classList.remove('darkmode');\n  // 2. Update darkMode in localStorage\n  localStorage.setItem('darkMode', null);\n  // 3. Uncheck the checkbox\n  darkModeCheckbox.checked = false;\n};\n\n// If the user already visited and enabled darkMode\n// start things off with it on\nif (darkMode === 'enabled') {\n  enableDarkMode();\n}\n\n// When someone clicks the first toggle\ndarkModeToggle.addEventListener('click', () => {\n  // Get the current state of dark mode\n  darkMode = localStorage.getItem('darkMode');\n\n  // Toggle the state based on the current value\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    darkModeToggleTwo.checked = true;\n  } else {\n    disableDarkMode();\n    darkModeToggleTwo.checked = false;\n  }\n});\n\n// When someone clicks the second toggle\ndarkModeToggleTwo.addEventListener('click', () => {\n  // Get the current state of dark mode for the second toggle\n  darkMode = localStorage.getItem('darkMode');\n\n  // Toggle the state based on the current value\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    darkModeToggle.checked = true;\n  } else {\n    disableDarkMode();\n    darkModeToggle.checked = false;\n  }\n});\n","import { BooksAPI } from \"./books-api\";\nimport { menuTemplate } from \"./allcategories/category_template\";\nimport { markupCategoryBook } from \"./allcategories/category_template\";\nimport { createListMarkup } from \"./bookMarkupLi\";\n\nconst listEl = document.querySelector('.vertical-menu');\nconst categoryTitle = document.querySelector('.main-header');\nconst bestsellersList = document.querySelector('.bestsellers-list');\nconst itemList = listEl.querySelector('li');\n\n\nconst booksAPI = new BooksAPI();\n\n\nwindow.addEventListener(\"DOMContentLoaded\", async () => {\n    itemList.classList.add('active');\n\n    try{\n        const listData =  await booksAPI.getCategoriesList();\n\n        const sortByAlphabet = listData\n        .map(el => {\n            const nameEl = el.list_name;\n            return nameEl;\n        })\n        .sort((a, b) => a.localeCompare(b));\n\n        const markup = menuTemplate(sortByAlphabet);\n        listEl.insertAdjacentHTML(\"beforeend\", markup);\n        \n    }catch(error) {\n        Notiflix.Notify.failure('Oops, something went wrong!');\n    }\n});\n\nlistEl.addEventListener('click', onChangeCategoryPage);\n\n\nbestsellersList.addEventListener('click', (e) => {\n    if(e.target.nodeName === 'BUTTON'){\n        categoryTitle.style.display = \"none\";\n        renderBooksFromCategory(e.target.name)\n        const liList = listEl.querySelectorAll('li');\n        liList.forEach(li =>{\n           if(li.textContent === e.target.name){\n            itemList.classList.remove('active');\n            li.classList.add('active');\n           };\n        })\n    }\n});\n\n\nasync function onChangeCategoryPage(e){\n    e.preventDefault();\n\n    if(e.target.nodeName === 'LI'){\n            listEl.querySelectorAll('li').forEach(item => {\n                item.classList.remove('active');\n            });\n            e.target.classList.add('active');\n\n        if(e.target.classList.contains('all_categories')){\n            try {\n                const response = await booksAPI.getBooks();\n                createListMarkup(response);\n    \n                categoryTitle.style.display = \"block\";\n\n                \n              } catch (error) {\n                Notiflix.Notify.failure('Oops, something went wrong!');\n              }\n\n        } else {\n            categoryTitle.style.display = \"none\";\n            const title = e.target.textContent;\n            renderBooksFromCategory(title);\n        }    \n    } else {\n        return;\n    }\n}\n\nasync function renderBooksFromCategory(category_name){\n    try{\n        const booksCategoryData = await booksAPI.getFullCategory(category_name);\n        markupCategoryBook(booksCategoryData, category_name);\n    }catch(error){\n        Notiflix.Notify.failure('Sorry, there is no books in this category');\n    }\n}\n\n","const booksList = document.querySelector('.bestsellers-list');\n\nexport default function createBookMarkup(book) {\n  return `<li class=\"book-card\" id=\"${book._id}\">\n            <div class=\"book-card-wrapper\">\n            <img class=\"book-card-img\" src=\"${book.book_image}\" alt=\"Book cover\" loading=\"lazy\" />\n            <p class=\"book-text-backdrop\">Quick view</p>\n            </div>\n            <h3 class=\"book-card-title\">${book.title}</h3>\n            <p class=\"book-card-text\">${book.author}</p>\n        </li>`;\n}\n\nexport function createListMarkup(books) {\n  const lists = [];\n  for (let i = 0; i < books.length; i += 1) {\n    const liMarkup = books[i].books\n      .map((book, idx) => {\n        if (idx < 5) {\n          return createBookMarkup(book);\n        }\n      })\n      .join('');\n    const markup = `<h2 class=\"top-category-title\">${books[i].list_name}</h2>\n    <ul class=\"top-category-list\">\n    ${liMarkup}\n    </ul>\n    <button class=\"book-card-btn\" name='${books[i].list_name}' type=\"button\">See more</button>`;\n    lists.push(markup);\n  }\n  booksList.innerHTML = lists.join('');\n}\n","import createBookMarkup from \"../bookMarkupLi\";\n\n\nexport function menuTemplate(list){\n     return list.map(el => {\n        return `<li class='list_name'>${el}</li>`;\n     }).join('');\n }\n\nexport function markupCategoryBook(array, category_name){\n    const bookLiEl = array.map(book => {\n        const markup = createBookMarkup(book);\n        return markup;\n    }).join('');\n\n    const categoryArray = category_name.split(\" \");\n\n    let lastElInd = categoryArray.length - 1;\n    let lastEl = categoryArray[lastElInd];\n    let firstPart = categoryArray.splice(0, lastElInd).join(\" \");\n   \n\n    const bookCategoryElements = `\n    <h2 class=\"main-header\">${firstPart} \n        <span class=\"main-header-accent\">${lastEl}</span>\n    </h2>\n    <ul class=\"category-books-wrapper\">${bookLiEl}</ul>`;\n\n    document.querySelector('.bestsellers-list').innerHTML = bookCategoryElements;\n\n    const bookCard = document.querySelectorAll('.book-card');\n    bookCard.forEach(item => {\n        item.classList.add('show-all');\n    })\n}","import Notiflix from 'notiflix';\nimport { BooksAPI } from './books-api';\nimport { createListMarkup } from './bookMarkupLi';\nimport { toggleLoader } from './loader';\n\nconst booksApi = new BooksAPI();\nasync function onPageLoad() {\n  toggleLoader();\n  try {\n    const response = await booksApi.getBooks();\n    if (response.length === 0) {\n      Notiflix.Notify.warning('Sorry, there are no top books yet');\n    }\n    createListMarkup(response);\n  } catch (error) {\n    Notiflix.Notify.failure('Oops, something went wrong!');\n  } finally {\n    toggleLoader();\n  }\n}\nonPageLoad();\n","const loaderEl = document.querySelector('.loader-backdrop');\n\nexport function toggleLoader() {\n  loaderEl.classList.toggle('is-hidden');\n}\n","const btnToTop = document.querySelector('#button-scroll-up');\n\nfunction scrollTop() {\n  window.addEventListener('scroll', onScrollShowBtn);\n\n  function onScrollShowBtn() {\n    window.scrollY > 200\n      ? btnToTop.classList.add('show')\n      : btnToTop.classList.remove('show');\n  }\n\n  btnToTop.addEventListener('click', onClickGoTop);\n\n  function onClickGoTop() {\n    if (window.scrollY != 0) {\n      setTimeout(function () {\n        window.scrollTo(0, window.scrollY - 70);\n        onClickGoTop();\n      }, 10);\n    }\n  }\n}\nscrollTop();\n"],"names":["parcelRequire","$dbed101c91af2533$var$darkMode","localStorage","getItem","$dbed101c91af2533$var$darkModeToggle","document","querySelector","$dbed101c91af2533$var$darkModeToggleTwo","$dbed101c91af2533$var$darkModeCheckbox","$dbed101c91af2533$var$enableDarkMode","body","classList","add","setItem","checked","$dbed101c91af2533$var$disableDarkMode","remove","addEventListener","$bpxeT","$826fa86900e05178$var$booksList","$826fa86900e05178$export$2e2bcd8739ae039","book","concat","_id","book_image","title","author","$826fa86900e05178$export$a8499f42c92fab5b","books","lists","i","length","liMarkup","map","idx","join","markup","list_name","push","innerHTML","$b2724bea9a9eb061$export$c4904c9f36c6087e","array","category_name","bookLiEl","categoryArray","split","lastElInd","lastEl","firstPart","splice","bookCategoryElements","querySelectorAll","forEach","item","$9de954820cc8c898$var$listEl","$9de954820cc8c898$var$categoryTitle","$9de954820cc8c898$var$bestsellersList","$9de954820cc8c898$var$itemList","$9de954820cc8c898$var$booksAPI","$fepPP","BooksAPI","$9de954820cc8c898$var$_onChangeCategoryPage","$parcel$interopDefault","$2TvXO","mark","_callee","e","preventDefault","target","nodeName","contains","getBooks","_ctx","sent","style","display","Notiflix","Notify","failure","$9de954820cc8c898$var$renderBooksFromCategory","textContent","apply","this","arguments","$9de954820cc8c898$var$_renderBooksFromCategory","getFullCategory","window","listData","sortByAlphabet","getCategoriesList","el","sort","a","b","localeCompare","insertAdjacentHTML","name","li","$03da642c15b09e5e$var$loaderEl","$03da642c15b09e5e$export$b7ad259263a18c06","toggle","$089c40fcbb903d20$var$booksApi","$089c40fcbb903d20$var$_onPageLoad","response","$6JpON","warning","$089c40fcbb903d20$var$onPageLoad","$17f8071d162f96bc$var$btnToTop","scrollY","onClickGoTop","setTimeout","scrollTo"],"version":3,"file":"index.88d290fe.js.map"}